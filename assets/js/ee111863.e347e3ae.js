"use strict";(self.webpackChunkpackages_docs=self.webpackChunkpackages_docs||[]).push([[434],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return m}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),d=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=d(e.components);return t.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(r),m=a,k=u["".concat(p,".").concat(m)]||u[m]||s[m]||l;return r?t.createElement(k,o(o({ref:n},c),{},{components:r})):t.createElement(k,o({ref:n},c))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=r[d];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4604:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var t=r(7462),a=r(3366),l=(r(7294),r(3905)),o=["components"],i={sidebar_position:3},p="API",d={unversionedId:"boundary/api",id:"boundary/api",isDocsHomePage:!1,title:"API",description:"ErrorBoundary",source:"@site/docs/boundary/api.md",sourceDirName:"boundary",slug:"/boundary/api",permalink:"/angular-composition-api/docs/boundary/api",editUrl:"https://github.com/mmuscat/angular-composition-api/tree/master/docs/boundary/api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Boundary",permalink:"/angular-composition-api/docs/boundary/setup"}},c=[{value:"ErrorBoundary",id:"errorboundary",children:[]},{value:"Fallback",id:"fallback",children:[]},{value:"NgCloak",id:"ngcloak",children:[]},{value:"NgCloakList",id:"ngcloaklist",children:[]}],s={toc:c};function u(e){var n=e.components,r=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"api"},"API"),(0,l.kt)("h2",{id:"errorboundary"},"ErrorBoundary"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"selector:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"error-boundary")),(0,l.kt)("p",null,"Creates an error boundary. Renders ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback")," content when an error is handled,\notherwise it renders an embedded template."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"method:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"retry()")),(0,l.kt)("p",null,"Resets the error state, hides ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback")," content and reloads the template."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"output:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"error")),(0,l.kt)("p",null,"Emits an ",(0,l.kt)("inlineCode",{parentName:"p"},"ErrorEvent")," when an error is caught."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface ErrorEvent {\n   error: unknown\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<error-boundary (error)="handleError($event)" #boundary>\n   <ng-template>\n      <maybe-throws></maybe-throws>\n   </ng-template>\n   <fallback>\n      <p>Uh oh... Something happened.</p>\n      <button (click)="boundary.retry()">Start again</button>\n   </fallback>\n</error-boundary>\n')),(0,l.kt)("h2",{id:"fallback"},"Fallback"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"selector:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback, [fallback]")),(0,l.kt)("p",null,"Fallback are hidden until they are rendered by an error boundary."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<error-boundary>\n   <fallback>An error has occurred</fallback>\n</error-boundary>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<error-boundary>\n   <div fallback>An error has occurred</div>\n</error-boundary>\n")),(0,l.kt)("h2",{id:"ngcloak"},"NgCloak"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"selector:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"ng-cloak")),(0,l.kt)("p",null,"Hides components and displays a ",(0,l.kt)("inlineCode",{parentName:"p"},"fallback")," until all pending data sources are resolved. Cloak boundaries are triggered\nby passing an ",(0,l.kt)("inlineCode",{parentName:"p"},"Observable")," to the ",(0,l.kt)("inlineCode",{parentName:"p"},"ErrorHandler")," service. Change detection still runs while a component is cloaked,\nand will continue to render children until all data dependencies are met."),(0,l.kt)("p",null,"A data dependency is met after it emits its first value, or completes. If one or more data dependencies fail, this\nwill cascade up to the nearest error boundary."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"examples:")),(0,l.kt)("p",null,"Given a component with async data, inject the ",(0,l.kt)("inlineCode",{parentName:"p"},"ErrorHandler")," service and pass your data dependencies to the ",(0,l.kt)("inlineCode",{parentName:"p"},"handleError"),"\nmethod."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"@Component()\nexport class MyBrand {\n   data\n\n   constructor(private errorHandler: ErrorHandler) {\n      this.data = of([1, 2, 3]).pipe(\n         delay(2000),\n         share(), // multicast to prevent multiple subscriptions\n      )\n      errorHandler.handleError(this.data) // will be cloaked for 2 seconds\n   }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<error-boundary>\n   <ng-template>\n      <ng-cloak>\n         <my-brand></my-brand>\n         <fallback>Loading...</fallback>\n      </ng-cloak>\n   </ng-template>\n   <fallback>Something went wrong</fallback>\n</error-boundary>\n")),(0,l.kt)("h2",{id:"ngcloaklist"},"NgCloakList"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"selector:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"cloak-list")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"input:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"revealOrder")," ",(0,l.kt)("strong",{parentName:"p"},"enum:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"together")," ",(0,l.kt)("inlineCode",{parentName:"p"},"forwards")," ",(0,l.kt)("inlineCode",{parentName:"p"},"backwards")),(0,l.kt)("p",null,"Controls the order in which items are revealed. If omitted all items will be rendered by default."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"input:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"tail")," ",(0,l.kt)("strong",{parentName:"p"},"enum:")," ",(0,l.kt)("inlineCode",{parentName:"p"},"collapsed")," ",(0,l.kt)("inlineCode",{parentName:"p"},"hidden")),(0,l.kt)("p",null,"Controls how fallbacks are rendered. ",(0,l.kt)("inlineCode",{parentName:"p"},"collapsed")," will only render the next fallback in the list, while ",(0,l.kt)("inlineCode",{parentName:"p"},"hidden")," will\nnot render any fallbacks. If omitted all fallbacks will be rendered by default."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"NgCloakList")," controls the rendering flow of multiple ",(0,l.kt)("inlineCode",{parentName:"p"},"NgCloak")," components. This is useful when rendering lists or grids, where each\nitem has its own cloak boundary."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<cloak-list revealOrder="forwards" tail="collapsed">\n  <ng-cloak *ngFor="let item of items">\n     <my-brand [item]="item"></my-brand>\n     <fallback>Loading...</fallback>\n  </ng-cloak>\n</cloak-list>\n')))}u.isMDXComponent=!0}}]);