"use strict";(self.webpackChunkpackages_docs=self.webpackChunkpackages_docs||[]).push([[993],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,k=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9043:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:7},c="Lifecycle Hooks",p={unversionedId:"lifecycle",id:"lifecycle",isDocsHomePage:!1,title:"Lifecycle Hooks",description:"Angular Composition API provides a layer of abstraction on top of Angular's change detection cycle. As a result not",source:"@site/docs/lifecycle.md",sourceDirName:".",slug:"/lifecycle",permalink:"/angular-composition-api/docs/lifecycle",editUrl:"https://github.com/mmuscat/angular-composition-api/tree/master/docs/lifecycle.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Subscriptions",permalink:"/angular-composition-api/docs/subscriptions"},next:{title:"Zone.js",permalink:"/angular-composition-api/docs/zones"}},s=[{value:"Composition Lifecycle",id:"composition-lifecycle",children:[{value:"Components",id:"components",children:[]},{value:"Directives",id:"directives",children:[]},{value:"Services",id:"services",children:[]}]}],m={toc:s};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lifecycle-hooks"},"Lifecycle Hooks"),(0,o.kt)("p",null,"Angular Composition API provides a layer of abstraction on top of Angular's change detection cycle. As a result not\nall lifecycle hooks have an equivalent representation. There are also some additional lifecycles that are not present\nin standard Angular components. The table below lists each standard lifecycle hook and their composition API equivalent\nwhere applicable."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Standard"),(0,o.kt)("th",{parentName:"tr",align:null},"Composition API"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"constructor"),(0,o.kt)("td",{parentName:"tr",align:null},"ViewDef/Service")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngOnChanges"),(0,o.kt)("td",{parentName:"tr",align:null},"beforeUpdate")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngOnInit"),(0,o.kt)("td",{parentName:"tr",align:null},"N/A")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngDoCheck"),(0,o.kt)("td",{parentName:"tr",align:null},"N/A")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngAfterContentInit"),(0,o.kt)("td",{parentName:"tr",align:null},"N/A")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngAfterContentChecked"),(0,o.kt)("td",{parentName:"tr",align:null},"N/A")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngAfterViewInit"),(0,o.kt)("td",{parentName:"tr",align:null},"subscribe")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngAfterViewChecked"),(0,o.kt)("td",{parentName:"tr",align:null},"onUpdated")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ngOnDestroy"),(0,o.kt)("td",{parentName:"tr",align:null},"onDestroy")))),(0,o.kt)("h2",{id:"composition-lifecycle"},"Composition Lifecycle"),(0,o.kt)("p",null,"The examples below illustrate the lifecycle for components, directives and services."),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"beforeUpdate")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"onUpdated")," lifecycle hooks are only available in components and directives."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component } from "@angular/core"\nimport {\n   beforeUpdate,\n   onDestroy,\n   onUpdated,\n   subscribe,\n   use,\n   ViewDef,\n} from "@mmuscat/angular-composition-api"\n\nfunction setup() {\n   const count = use(0)\n\n   subscribe(count, () => {\n      // <3>\n      return () => {\n         // <4>\n      }\n   })\n\n   beforeUpdate(() => {\n      // <5>\n   })\n\n   onUpdated(() => {\n      // <6>\n   })\n\n   onDestroy(() => {\n      // <7>\n   })\n\n   return {\n      count, // <1>\n   }\n}\n\n@Component({\n   inputs: ["count"], // <2>\n})\nexport class MyComponent extends ViewDef(setup) {}\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"During component creation any ",(0,o.kt)("inlineCode",{parentName:"p"},"Value")," returned from the setup function is unwrapped and synchronised with the\ncomponent instance.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Inputs and queries are automatically checked and synchronised with a matching ",(0,o.kt)("inlineCode",{parentName:"p"},"Value")," by name.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Subscriptions are subscribed to once the component has been mounted. The component template is checked once\nimmediately and each time after a subscription emits a value.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"TeardownLogic")," returned from a ",(0,o.kt)("inlineCode",{parentName:"p"},"subscribe")," observer is executed each time the observer receives a new value, or\nthe subscription ends.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Executed after component state mutation, just before the component template updates. Compared with\n",(0,o.kt)("inlineCode",{parentName:"p"},"ngOnChanges")," this is not just limited to ",(0,o.kt)("inlineCode",{parentName:"p"},"inputs"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Executed after the component template updated. Compared with ",(0,o.kt)("inlineCode",{parentName:"p"},"ngAfterViewInit"),", this will only run once per render\ncycle.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Executed once when the component is destroyed."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"onBeforeUpdate")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"onUpdated")," lifecycle hooks can also be used as observables"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const beforeUpdate = onBeforeUpdate()\n\nsubscribe(beforeUpdate, () => {\n   // mutate state\n})\n")))),(0,o.kt)("h3",{id:"directives"},"Directives"),(0,o.kt)("p",null,"Directives share the same lifecycle as components."),(0,o.kt)("h3",{id:"services"},"Services"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Service, use } from "@mmuscat/angular-composition-api"\n\nfunction myService() {\n   const count = use(0)\n\n   subscribe(count, () => {\n      // <2>\n      return () => {\n         // <3>\n      }\n   })\n\n   onDestroy(() => {\n      // <4>\n   })\n\n   return {\n      count, // <1>\n   }\n}\n\nexport const MyService = new Service(myService)\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"During service creation no special treatment is given to ",(0,o.kt)("inlineCode",{parentName:"p"},"Value"),", it is returned as given.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Subscriptions work the same way as components, except they are subscribed to immediately after the setup function\nhas run.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"TeardownLogic")," runs when the observer receives a new value, or the subscription ends.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Executed once when the service is destroyed."))))}d.isMDXComponent=!0}}]);